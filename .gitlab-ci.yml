default:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  tags:
    - ord1-tenant

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH
      when: always

variables:
  RELEASE_VERSION: "1.68.0"
  REF_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  FIXED_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  DOCKERFILE: ${CI_PROJECT_DIR}/Docker/Dockerfile
  REGPROXY_URI: ${REGPROXY_URI}
  LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest

stages:
  - build
  - release

build:
  stage: build
  before_script:
    - export HTTP_PROXY=${REGPROXY_URI}
    - export HTTPS_PROXY=${REGPROXY_URI}
    - mkdir -p /etc/ssl/certs/ && cat /etc/gitlab-runner/certs/proxy-ca.crt >> /etc/ssl/certs/ca-certificates.crt
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script: |-
    /kaniko/executor \
      --context ${CI_PROJECT_DIR} \
      --dockerfile $DOCKERFILE \
      --destination $REF_IMAGE \
      --destination $FIXED_IMAGE \
      --build-arg VERSION="v${RELEASE_VERSION}"
  only:
    changes:
      - Docker/*

release:
  stage: release
  only:
    refs:
      - main
  dependencies:
    - build
  before_script:
    - export HTTP_PROXY=${REGPROXY_URI}
    - export HTTPS_PROXY=${REGPROXY_URI}
    - export RELEASE="$CI_REGISTRY_IMAGE":"v${RELEASE_VERSION}"
    - mkdir -p /etc/ssl/certs/ && cat /etc/gitlab-runner/certs/proxy-ca.crt >> /etc/ssl/certs/ca-certificates.crt
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script: |-
    /kaniko/executor \
    --context ${CI_PROJECT_DIR} \
    --dockerfile $DOCKERFILE \
    --destination $RELEASE \
    --build-arg VERSION="v${RELEASE_VERSION}"

release-chart:
  stage: release
  image: alpine/helm:3.15.2
  only:
    refs:
      - main
  dependencies:
    - build
  script:
    - apk add git
    - helm plugin install https://github.com/chartmuseum/helm-push.git
    - cd chart
    - helm repo add helm_repo $REPO_URL --username $REPO_USER --password $REPO_PASS
    - helm package ./tailscale-derp --version "$RELEASE_VERSION"
    - helm cm-push ./tailscale-derp helm_repo --version "$RELEASE_VERSION" -f
