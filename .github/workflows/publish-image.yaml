---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Container: Image Build"
on:
  workflow_dispatch: {}
  pull_request:
    branches: ["main"]
    types: ["opened", "synchronize", "reopened"]
    paths:
      - .github/workflows/publish-image.yaml
      - "Docker/**/*"
  push:
    branches:
      - main
    paths:
      - .github/workflows/publish-image.yaml
      - "Docker/**/*"

env:
  # renovate: datasource=go depName=tailscale.com
  UPSTREAM_TS_VERSION: v1.88.4

jobs:
  publish-images:
    name: Publish Image
    permissions:
      contents: write
      packages: write
      pull-requests: write
      actions: write
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: ghcr.io/${{ github.repository }}
          labels: |
            org.opencontainers.image.source="https://github.com/tailscale/tailscale"
          tags: |
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ env.UPSTREAM_TS_VERSION }}
            type=raw,value=${{ env.UPSTREAM_TS_VERSION }}-{{sha}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Log into registry ghcr.io
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ./
          file: ./Docker/Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ env.UPSTREAM_TS_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}

      - name: Update Helm Chart Image
        id: update-helm-chart
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          TAG=${{ fromJSON(steps.meta.outputs.json).tags[2] }}
          VERSION=$(echo "$TAG" | cut -d ':' -f 2)
          yq eval ".appVersion = \"$VERSION\"" -i chart/tailscale-derp/Chart.yaml
          yq ".appVersion" chart/tailscale-derp/Chart.yaml

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7
        id: cpr
        if: ${{ github.event_name != 'pull_request' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "feat(container): update to ${{ fromJSON(steps.meta.outputs.json).tags[2] }}"
          body: "Updating helm appVersion to ${{ fromJSON(steps.meta.outputs.json).tags[2] }}"
          branch: bump-helm-image
          delete-branch: true
          author: |
            dependa-jr[bot] <171952447+dependa-jr[bot]@users.noreply.github.com>
          committer: |
            dependa-jr[bot] <171952447+dependa-jr[bot]@users.noreply.github.com>
          title: |
            "feat(container): update to ${{ fromJSON(steps.meta.outputs.json).tags[2] }}"

      - name: Enable Pull Request Automerge
        if: ${{ github.event_name != 'pull_request' }}
        run: gh pr merge --squash --auto ${{ steps.cpr.outputs.pull-request-number }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh workflow run release.yaml
