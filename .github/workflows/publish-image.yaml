---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Container: Image Build"
on:
  workflow_dispatch: {}
  pull_request:
    branches: ["main"]
    types: ["opened", "synchronize", "reopened"]
  push:
    branches:
      - main
    paths:
      - "Docker/**/*"

env:
  # renovate: depName=tailscale.com datasource=go
  UPSTREAM_TS_VERSION: v1.68.0

jobs:
  publish-images:
    name: Publish Image
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=schedule
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ env.UPSTREAM_TS_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Log into registry ghcr.io
        uses: docker/login-action@v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.2.0
        if: ${{ github.event_name != 'pull_request'}}
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ./
          file: ./Docker/Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ env.UPSTREAM_TS_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
